{"version":3,"file":"taquito-remote-signer.es5.js","sources":["../src/errors.ts","../src/taquito-remote-signer.ts"],"sourcesContent":["export class KeyNotFoundError implements Error {\n  public name: string = 'KeyNotFoundError';\n  constructor(public message: string, public innerException: any) {}\n}\n\nexport class OperationNotAuthorizedError implements Error {\n  public name: string = 'OperationNotAuthorized';\n  constructor(public message: string, public innerException: any) {}\n}\n\nexport class BadSigningDataError implements Error {\n  public name: string = 'BadSigningData';\n  constructor(public message: string, public innerException: any, public readonly data: any) {}\n}\n","import {\n  b58cdecode,\n  b58cencode,\n  buf2hex,\n  prefix,\n  hex2buf,\n  mergebuf,\n  Prefix,\n  isValidPrefix,\n} from '@taquito/utils';\nimport { HttpBackend, STATUS_CODE, HttpResponseError } from '@taquito/http-utils';\nimport toBuffer from 'typedarray-to-buffer';\nimport { KeyNotFoundError, OperationNotAuthorizedError, BadSigningDataError } from './errors';\n\ninterface PublicKeyResponse {\n  public_key: string;\n}\n\ninterface SignResponse {\n  signature: string;\n}\n\nexport class RemoteSigner {\n  constructor(private pkh: string, private rootUrl: string, private http = new HttpBackend()) {}\n\n  async publicKeyHash(): Promise<string> {\n    return this.pkh;\n  }\n\n  private createURL(path: string) {\n    // Trim trailing slashes because it is assumed to be included in path\n    return `${this.rootUrl.replace(/\\/+$/g, '')}${path}`;\n  }\n\n  async publicKey(): Promise<string> {\n    try {\n      const { public_key } = await this.http.createRequest<PublicKeyResponse>({\n        url: this.createURL(`/keys/${this.pkh}`),\n        method: 'GET',\n      });\n      return public_key;\n    } catch (ex) {\n      if (ex instanceof HttpResponseError) {\n        if (ex.status === STATUS_CODE.NOT_FOUND) {\n          throw new KeyNotFoundError(`Key not found: ${this.pkh}`, ex);\n        }\n      }\n      throw ex;\n    }\n  }\n\n  async secretKey(): Promise<string> {\n    throw new Error('Secret key cannot be exposed');\n  }\n\n  async sign(bytes: string, watermark?: Uint8Array) {\n    try {\n      let bb = hex2buf(bytes);\n      if (typeof watermark !== 'undefined') {\n        bb = mergebuf(watermark, bb);\n      }\n      const { signature } = await this.http.createRequest<SignResponse>(\n        { url: this.createURL(`/keys/${this.pkh}`), method: 'POST' },\n        buf2hex(toBuffer(bb))\n      );\n      let pref = signature.startsWith('sig') ? signature.substr(0, 3) : signature.substr(0, 5);\n\n      if (!isValidPrefix(pref)) {\n        throw new Error('Unsupported signature given by remote signer: ' + signature);\n      }\n\n      const decoded = b58cdecode(signature, prefix[pref]);\n\n      return {\n        bytes,\n        sig: b58cencode(decoded, prefix.sig),\n        prefixSig: signature,\n        sbytes: bytes + buf2hex(toBuffer(decoded)),\n      };\n    } catch (ex) {\n      if (ex instanceof HttpResponseError) {\n        if (ex.status === STATUS_CODE.NOT_FOUND) {\n          throw new KeyNotFoundError(`Key not found: ${this.pkh}`, ex);\n        } else if (ex.status === STATUS_CODE.FORBIDDEN) {\n          throw new OperationNotAuthorizedError('Signing Operation not authorized', ex);\n        } else if (ex.status === STATUS_CODE.BAD_REQUEST) {\n          throw new BadSigningDataError('Invalid data', ex, {\n            bytes,\n            watermark,\n          });\n        }\n      }\n      throw ex;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}