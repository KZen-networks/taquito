{"version":3,"file":"taquito-remote-signer.umd.js","sources":["../src/errors.ts","../src/taquito-remote-signer.ts"],"sourcesContent":["export class KeyNotFoundError implements Error {\n  public name: string = 'KeyNotFoundError';\n  constructor(public message: string, public innerException: any) {}\n}\n\nexport class OperationNotAuthorizedError implements Error {\n  public name: string = 'OperationNotAuthorized';\n  constructor(public message: string, public innerException: any) {}\n}\n\nexport class BadSigningDataError implements Error {\n  public name: string = 'BadSigningData';\n  constructor(public message: string, public innerException: any, public readonly data: any) {}\n}\n","import {\n  b58cdecode,\n  b58cencode,\n  buf2hex,\n  prefix,\n  hex2buf,\n  mergebuf,\n  Prefix,\n  isValidPrefix,\n} from '@taquito/utils';\nimport { HttpBackend, STATUS_CODE, HttpResponseError } from '@taquito/http-utils';\nimport toBuffer from 'typedarray-to-buffer';\nimport { KeyNotFoundError, OperationNotAuthorizedError, BadSigningDataError } from './errors';\n\ninterface PublicKeyResponse {\n  public_key: string;\n}\n\ninterface SignResponse {\n  signature: string;\n}\n\nexport class RemoteSigner {\n  constructor(private pkh: string, private rootUrl: string, private http = new HttpBackend()) {}\n\n  async publicKeyHash(): Promise<string> {\n    return this.pkh;\n  }\n\n  private createURL(path: string) {\n    // Trim trailing slashes because it is assumed to be included in path\n    return `${this.rootUrl.replace(/\\/+$/g, '')}${path}`;\n  }\n\n  async publicKey(): Promise<string> {\n    try {\n      const { public_key } = await this.http.createRequest<PublicKeyResponse>({\n        url: this.createURL(`/keys/${this.pkh}`),\n        method: 'GET',\n      });\n      return public_key;\n    } catch (ex) {\n      if (ex instanceof HttpResponseError) {\n        if (ex.status === STATUS_CODE.NOT_FOUND) {\n          throw new KeyNotFoundError(`Key not found: ${this.pkh}`, ex);\n        }\n      }\n      throw ex;\n    }\n  }\n\n  async secretKey(): Promise<string> {\n    throw new Error('Secret key cannot be exposed');\n  }\n\n  async sign(bytes: string, watermark?: Uint8Array) {\n    try {\n      let bb = hex2buf(bytes);\n      if (typeof watermark !== 'undefined') {\n        bb = mergebuf(watermark, bb);\n      }\n      const { signature } = await this.http.createRequest<SignResponse>(\n        { url: this.createURL(`/keys/${this.pkh}`), method: 'POST' },\n        buf2hex(toBuffer(bb))\n      );\n      let pref = signature.startsWith('sig') ? signature.substr(0, 3) : signature.substr(0, 5);\n\n      if (!isValidPrefix(pref)) {\n        throw new Error('Unsupported signature given by remote signer: ' + signature);\n      }\n\n      const decoded = b58cdecode(signature, prefix[pref]);\n\n      return {\n        bytes,\n        sig: b58cencode(decoded, prefix.sig),\n        prefixSig: signature,\n        sbytes: bytes + buf2hex(toBuffer(decoded)),\n      };\n    } catch (ex) {\n      if (ex instanceof HttpResponseError) {\n        if (ex.status === STATUS_CODE.NOT_FOUND) {\n          throw new KeyNotFoundError(`Key not found: ${this.pkh}`, ex);\n        } else if (ex.status === STATUS_CODE.FORBIDDEN) {\n          throw new OperationNotAuthorizedError('Signing Operation not authorized', ex);\n        } else if (ex.status === STATUS_CODE.BAD_REQUEST) {\n          throw new BadSigningDataError('Invalid data', ex, {\n            bytes,\n            watermark,\n          });\n        }\n      }\n      throw ex;\n    }\n  }\n}\n"],"names":["HttpBackend","HttpResponseError","STATUS_CODE","hex2buf","mergebuf","buf2hex","isValidPrefix","b58cdecode","prefix","b58cencode"],"mappings":"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"}